plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    //git-hooks
    id 'com.github.jakemarsden.git-hooks' version '0.0.2'
}

group = 'com.education'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        // Spring Cloud 전체 버전 일괄 지정
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.1"
    }
}

dependencies {
    //Spring Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    //developmentOnly 'org.springframework.boot:spring-boot-devtools' 캐싱을 위해서 끄기
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2' // 임시로 사용할 데이터베이스
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //OAuth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    //Google OAuth
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.http-client:google-http-client-jackson2:1.43.3'
    // Feign Client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // Redis + Cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Kakao id_token 검증용
    implementation 'com.auth0:java-jwt:4.4.0'
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Redis 의존성 (Spring Boot 3.x에서는 lettuce 사용)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
    useJUnitPlatform()
}

gitHooks {
    // where to install your hooks; you can leave this at the default '.githooks'
    hooksDirectory = file('.git/hooks')

    // load each script file as a String so the plugin writes its content
    hooks = [
            'prepare-commit-msg': file('githooks-src/prepare-commit-msg').text,
            'commit-msg'        : file('githooks-src/commit-msg').text
    ]
}