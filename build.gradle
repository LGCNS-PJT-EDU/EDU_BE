plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    //git-hooks
    id 'com.github.jakemarsden.git-hooks' version '0.0.2'
}

group = 'com.education'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //Spring Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

gitHooks {
    // where to install your hooks; you can leave this at the default '.githooks'
    hooksDirectory = file('.git/hooks')

    // load each script file as a String so the plugin writes its content
    hooks = [
            'prepare-commit-msg': file('githooks-src/prepare-commit-msg').text,
            'commit-msg'        : file('githooks-src/commit-msg').text
    ]
}