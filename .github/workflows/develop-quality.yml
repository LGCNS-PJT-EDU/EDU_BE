# .github/workflows/quality.yml
name: SonarCloud Quality Gate

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  build-and-analyze:
    name: Build → Test → Coverage → SonarCloud
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      # 1) 소스 체크아웃
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0        # 히스토리 전체(분석 정확도 ↑)

      # 2) JDK 21 (Temurin)
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      # 3) 캐시: Sonar + Gradle
      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      # 4) Gradle 빌드(+테스트·커버리지) & SonarCloud 업로드
      #    build 태스크 → test → jacocoTestReport → jacocoTestCoverageVerification
      #    끝나면 sonar 태스크로 업로드
      - name: Build and SonarCloud analyze
        run: |
            ./gradlew test \
              sonarqube \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.branch.name=develop \
              --info
