version: '3.9' # Docker 20.10+ 권장
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: kzoo
    restart: unless-stopped # 컨테이너가 죽으면 자동 재시작, docker stop 시엔 유지
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # 클라이언트 접속 포트
      ZOOKEEPER_TICK_TIME: 2000 # 서버 간 하트비트 주기
      ZOOKEEPER_SYNC_LIMIT: 2 # 리더 <-> 팔로워 최대 자연 틱

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kbroker
    depends_on: [ zookeeper ]
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data          # 데이터 남기기
    restart: unless-stopped
    networks:
      - app-network
    environment:
      # ------ 기본 ------
      KAFKA_BROKER_ID: 1 # 브로커 고유 ID
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # 브로커가 메타데이터를 저장할 ZK
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # 컨슈머 그룹 오프셋 토픽의 복제계수, 싱글 노드라 1 운영은 3 권장
      # ------ 리스너 설정 ------
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 # 컨테이너 내부 바인드 주소
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # 클라이언트 접속할 주소
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT # 
      # ------ 로그 & 성능 튜닝 ------
      # (운영 전환 시 override 용이)
      KAFKA_LOG_RETENTION_HOURS: 168          # 7일
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      # ───────── JVM 메모리 (로컬 최소화) ─────────
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"


volumes:
  kafka_data:

networks:
  app-network: